# ==================
# tmux configuration
# ==================
#
# <<Perche' screen e' anni '90.>>
#	-- Anonimo
#
# Key bindings:
# s => choose-tree => Permette di scegliere una window/pane di una sessione
# w => choose-window => Permette di scegliere una window di questa sessione

################
# MISC OPTIONS #
################

# set TERM for 256 colors
set -g default-terminal "tmux-256color"

# RGB 24bit color support
# check support by running: tmux info | grep Tc
set -ga terminal-overrides ",screen-256color:Tc,xterm-256color:Tc,tmux-256color:Tc"

# turn on automatic window naming
setw -g automatic-rename on

# quando si chiude l'ultima finestra e ci sono ancora sessioni aperte, passa alla prima di esse.
set -g detach-on-destroy off

# only show the window bell for the current window
set -g bell-action current
# show tmux messages for 1000ms
set -g display-time 1000
# set a shorter timeout on the "repeat" feature (was 250ms)
set -g repeat-time 125

# numero di righe nella history di una window
set -g history-limit 5120

# set escape-time to 250ms to avoid confusion with the ESC key in Vim
set -g escape-time 250

# index windows and panes from 1 which key is more friendly than 0 on a keyboard
set -g base-index 1
set -g pane-base-index 1

# emacs keys, che e' meglio.
setw -g mode-keys vi
set -g status-keys emacs

# enable wm window titles
set -g set-titles on

# wm window title string (uses statusbar variables)
set -g set-titles-string '#h ‚ùê #S ‚óè #I #W'

# Riassegna gli ID delle window quando ne chiudi una (tmux 1.7)
set -g renumber-windows on

##########
# THEMES #
##########

# pane border
# orange on black
set -g pane-active-border-style "fg=#00afff,bg=default"
# blue on default
set -g pane-border-style "fg=#444444,bg=default"

# pane number display
set -g display-panes-active-colour "#fb4934"
set -g display-panes-colour "#8ec07c"

# clock
setw -g clock-mode-colour "#8ec07c"

set -g message-command-style "fg=#928374,bg=#fabd2f"
set -g message-style "fg=#fe8019,bg=#331b5b"

# Status bar
set -g status-style "fg=#ebdbb2,bg=default"

# left status bar
set -g status-left '#[fg=#fabd2f] ‚õ©  #{session_name}#[fg=#ebdbb2] #[fg=#d65d0e]‚óè #{window_index}.#{pane_index} #[fg=default]| #[fg=#00678C]VPN #[fg=#B1BF86,bold]#($HOME/bin/vpn_status -q)  #[default]#{?client_prefix,üí¨,}#{?pane_in_mode,üìù,}'
set -g status-left-length 80

# right status bar
set -g status-right "#[fg=#65C25B]#{pane_title} #[fg=default]| #[fg=#537fa0]#(~/Preferences/bin/fuzzyclock.zsh) #[fg=default]| #[fg=#b8bb26]%H:%M ~ #[fg=#b8bb26]%d-%h-%Y#[default]"
set -g status-right-length 80

# center align the window list
set -g status-justify centre

# default window title colors
setw -g window-status-style "fg=#ebdbb2,bg=default"
setw -g window-status-format '#[fg=#121211,bg=#6b3f27] #{window_index} #[fg=#2e2c2a,bg=#3c6b27] #{window_name}#[fg=yellow]#{window_flags}#[fg=default] #{?pane_synchronized,üî• ,}'
setw -g window-status-current-format '#[fg=#000000,bg=#35527F] #{window_index} #[fg=#C6D4D9,bg=#00678C] #{window_name}#[fg=yellow]#{window_flags}#[fg=default] #{?pane_synchronized,üî• ,}#{?window_zoomed_flag,üîç ,}'
setw -g window-status-current-style "fg=#ebdbb2,bg=default"

# allow renaming the window name via escape sequences
# setw -g allow-rename on

################
# KEY BINDINGS #
################

# split current window
# bind S split-window -c "#{pane_current_path}"

# Vertical and horizontal window splitting
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# preserve current path for new windows
bind c new-window -c "#{pane_current_path}"

# alt+left: previous window
# alt+right: next window
# (In Terminal.app √® Ctrl-Alt-<left|right>, se hai attivato ALT=META nelle opzioni)
bind -n M-left previous-window
bind -n M-right next-window

# shift+left: swap with the previous window
# shift+right: swap with the next window
bind -n S-left swap-window -t:-1
bind -n S-right swap-window -t:+1

# F8: previous window
# F9: next window
# bind -n F8 previous-window
# bind -n F9 next-window

# set command prefix from C-b to C-a
# NOTE: there was a problem with tmux (maybe it's by design) for which you
# can't use a command prefix like "`" because it could get triggered by pasted
# text. :(
unbind C-b
set -g prefix C-a
# allow sending of "real" C-a for readline and nested tmux sessions (i.e. you can
# press C-a C-a to send a real C-a)
bind a send-prefix

# set window title
# unbind A
# bind A command-prompt "rename-window %%"
# NO! Use "PREFIX-,"

# pane movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# paste + bracketed paste
unbind C-]
bind ] paste-buffer -p

# reload config
bind r source-file ~/.tmux.conf \; display "tmux configuration reloaded!"

# monitor activity
# bind m setw monitor-activity

# man
bind m command-prompt -p "man page:" "split-window -h 'exec man %%'"
bind M command-prompt -p "Man page:" "new-window -n 'man %1' 'exec man %1'"

# duplicate input to all panes in the same window
# bind S setw synchronize-panes on
# bind s setw synchronize-panes off

# funny session names
set-hook -g session-created "run-shell ~/bin/tmux-funny-session"

###########################
# OS BASED CUSTOMIZATIONS #
###########################

# If tmux is started from an ssh connection rebind the command key from C-a to C-f
if '[ ! -z "$SSH_CONNECTION" ]' 'unbind C-a ; set -g prefix C-f ; bind C-f send-prefix'

# C-y: copy-to-OS-clipboard
if '[[ $OSTYPE == linux* ]]' 'bind y run-shell "tmux show-buffer | xclip -in -selection clipboard -d :0" \; display-message "tmux bufffer copied into clipboard!"'
if '[[ $OSTYPE == darwin* ]]' 'bind y run-shell "tmux show-buffer | pbcopy" \; display-message "tmux buffer copied into clipboard!"'

# Plugins
# if '[ -e ~/dev/others/tmux-copycat ]' 'run-shell ~/dev/others/tmux-copycat/copycat.tmux'
# if '[ -e ~/dev/others/tmux-fingers ]' 'run-shell ~/dev/others/tmux-fingers/tmux-fingers.tmux'

# Load local settings
if '[ -e ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'
